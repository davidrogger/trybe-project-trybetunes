{"version":3,"sources":["services/userAPI.js","components/Loading2.js","imgs/trybetunes_logo2.svg","components/Header.js","components/Loading.js","services/favoriteSongsAPI.js","components/MusicCard.js","services/musicsAPI.js","pages/Album.js","imgs/default_avatar.svg","pages/ProfileEdit.js","pages/Profile.js","pages/Favorites.js","services/searchAlbumsAPI.js","components/AlbumCard.js","pages/Search.js","imgs/trybetunes_logo.svg","pages/Login.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Profile","className","Component","Header","props","userLoged","a","userProfile","setState","userName","headerLoading","state","this","pathname","location","selectedLink","defaultLink","src","tunesLogo","alt","to","withRouter","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","isFavorite","favoriteList","favorite","some","music","trackLoading","favoriteCheckBox","favoriteSong","prevState","musicTrack","trackName","artworkUrl100","favoritePage","collectionId","Loading","controls","kind","size","weight","id","onClick","getMusics","fetch","method","headers","request","json","requestJson","results","Album","gettingAlbumMusics","match","params","musicsResponse","artistName","collectionName","justTrackMusics","artworkIMG","albumLoading","musicList","checkBox","find","map","previewUrl","ProfileEdit","getUserData","userData","profileEditLoading","validInput","emailValidation","test","lengthValidation","every","input","length","emailTest","finalTest","buttonDisable","formsStateUpdate","target","value","saveProfile","pageRedirect","profileForms","defaultAvatar","placeholder","type","onChange","disabled","userLogged","profileLoading","profileDisplay","Favorites","favoriteRecovery","favoriteLoading","favoriteDisplay","album","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","releaseDate","trackCount","AlbumCard","searchData","Search","searchStateUpdate","searchFor","minSearchLength","searchAlbuns","searchLoading","searchAlbumAPIs","searchResponse","searchList","currentSearch","searchDisplay","Login","minNameLength","loginStateUpdate","userLogin","loading","NotFound","logo","App","logIn","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98d5e7f5.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div className=\"horizontal-bar\"> </div>\n    );\n  }\n}\n\nexport default Profile;\n","export default __webpack_public_path__ + \"static/media/trybetunes_logo2.045de2e9.svg\";","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\n// Serviços\nimport { getUser } from '../services/userAPI';\n\n// Componentes\nimport Loading from './Loading2';\n\nimport tunesLogo from '../imgs/trybetunes_logo2.svg';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: '',\n      headerLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.userLoged();\n  }\n\n  userLoged = async () => {\n    const userProfile = await getUser();\n    const { name } = userProfile;\n    this.setState({\n      userName: name,\n      headerLoading: false,\n    });\n  }\n\n  render() {\n    const { userName, headerLoading } = this.state;\n    const { location: { pathname } } = this.props;\n    const selectedLink = 'selected-nav-link';\n    const defaultLink = 'default-nav-link';\n    return (\n      <header data-testid=\"header-component\" className=\"header-container top-container\">\n\n        {headerLoading\n          ? <Loading />\n          : (\n            <>\n              <section className=\"header-content\">\n                <img className=\"header-logo\" src={ tunesLogo } alt=\"Trybetunes logo\" />\n                <section\n                  className=\"user-header-container\"\n                >\n                  <div className=\"user-header-icon\">\n                    <div className=\"avatar-head-ico\">\n                      .\n                    </div>\n                    <div className=\"avatar-body-ico\">\n                      ...\n                    </div>\n                  </div>\n                  <span\n                    data-testid=\"header-user-name\"\n                  >\n                    {userName}\n\n                  </span>\n                </section>\n              </section>\n              <ul className=\"nav-container\">\n\n                <Link\n                  className={ pathname === '/search' ? selectedLink : defaultLink }\n                  to=\"/search\"\n                  data-testid=\"link-to-search\"\n                >\n                  <li>Pesquisa</li>\n\n                </Link>\n\n                <Link\n                  className={ pathname === '/favorites' ? selectedLink : defaultLink }\n                  to=\"/favorites\"\n                  data-testid=\"link-to-favorites\"\n                >\n                  <li>Favoritas</li>\n\n                </Link>\n\n                <Link\n                  className={ pathname === '/profile' ? selectedLink : defaultLink }\n                  to=\"/profile\"\n                  data-testid=\"link-to-profile\"\n                >\n                  <li>Perfil</li>\n\n                </Link>\n\n              </ul>\n            </>\n          )}\n\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }),\n}.isRequired;\n\nexport default withRouter(Header);\n","import React, { Component } from 'react';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <section className=\"loading-container\">\n\n        <div className=\"bar bar1\"> </div>\n        <div className=\"bar bar2\"> </div>\n        <div className=\"bar bar3\"> </div>\n        <div className=\"bar bar4\"> </div>\n        <div className=\"bar bar5\"> </div>\n        <div className=\"bar bar6\"> </div>\n        <div className=\"bar bar7\"> </div>\n        <div className=\"bar bar8\"> </div>\n\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Heart } from 'phosphor-react';\n\n// Componentes\nimport Loading from './Loading';\n\n// Serviços\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass MusicCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trackLoading: true,\n      favorite: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isFavorite();\n  }\n\nisFavorite = async () => {\n  const { trackId } = this.props;\n  const favoriteList = await getFavoriteSongs(trackId);\n  const favorite = favoriteList.some((music) => music.trackId === trackId);\n  this.setState({\n    favorite,\n    trackLoading: false,\n  });\n}\n\nfavoriteCheckBox = (trackId) => {\n  const { favoriteSong } = this.props;\n  const { favorite } = this.state;\n  this.setState((prevState) => ({\n    favorite: !prevState.favorite,\n  }));\n  const boxValue = !favorite;\n  favoriteSong(trackId, boxValue);\n}\n\nrender() {\n  const {\n    musicTrack, trackName, trackId, artworkUrl100, favoritePage = false,\n    collectionId,\n  } = this.props;\n\n  const { favorite, trackLoading } = this.state;\n\n  return (\n    trackLoading\n      ? <Loading />\n      : (\n        <li className=\"album-track\">\n          { favoritePage && (\n            <Link\n              to={ `/album/${collectionId}` }\n            >\n              <img src={ artworkUrl100 } alt=\"Imagem do album\" />\n            </Link>\n          ) }\n          <span>\n            {trackName}\n          </span>\n          <section\n            className=\"audio-container\"\n          >\n            <audio\n              data-testid=\"audio-component\"\n              src={ musicTrack }\n              controls\n            >\n              <track kind=\"captions\" />\n            </audio>\n            <Heart\n              size={ 25 }\n              weight={ favorite ? 'fill' : 'regular' }\n              id={ trackId }\n              onClick={ () => this.favoriteCheckBox(trackId) }\n            />\n          </section>\n        </li>)\n  );\n}\n}\n\nMusicCard.propTypes = {\n  musicTrack: PropTypes.string,\n  trackName: PropTypes.string,\n  trackId: PropTypes.number,\n  favoriteSong: PropTypes.func,\n  artworkUrl100: PropTypes.string,\n  isFavoritePage: PropTypes.bool,\n}.isRequired;\n\nexport default MusicCard;\n","const getMusics = async (id) => {\n  const request = await fetch(\n    `https://itunes.apple.com/lookup?id=${id}&entity=song`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","// Biblioteca\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Componentes\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\n\n// Serviços\nimport getMusics from '../services/musicsAPI';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      artistName: '',\n      collectionName: '',\n      artworkIMG: '',\n      albumLoading: true,\n      musicList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.gettingAlbumMusics();\n  }\n\n  gettingAlbumMusics = async () => {\n    const { match: { params: { id } } } = this.props;\n    const musicsResponse = await getMusics(id);\n    const { artistName, collectionName, artworkUrl100 } = musicsResponse[0];\n    const justTrackMusics = musicsResponse\n      .filter(({ kind }) => kind === 'song');\n    this.setState({\n      artistName,\n      collectionName,\n      artworkIMG: artworkUrl100,\n      albumLoading: false,\n      musicList: justTrackMusics,\n    });\n  }\n\nfavoriteSong = async (id, checkBox) => {\n  const { musicList } = this.state;\n  const favorite = musicList.find(({ trackId }) => trackId === id);\n  this.setState({ albumLoading: true });\n  if (checkBox) {\n    await addSong(favorite);\n  }\n  if (!checkBox) {\n    await removeSong(favorite);\n  }\n  this.setState({ albumLoading: false });\n}\n\nrender() {\n  const { artistName, collectionName, musicList, albumLoading,\n    artworkIMG } = this.state;\n  return (\n    <section data-testid=\"page-album\" className=\"top-container\">\n      <Header />\n      <section className=\"album-container\">\n        <section className=\"album-detail\">\n          { albumLoading\n            ? <Loading />\n            : (\n              <>\n                <section className=\"album-details-left-container\">\n                  <img src={ artworkIMG } alt={ collectionName } />\n                  <section\n                    className=\"album-titles\"\n                  >\n                    <h3 data-testid=\"artist-name\">{artistName}</h3>\n                    <span data-testid=\"album-name\">{collectionName}</span>\n                  </section>\n                </section>\n                <ul className=\"album-playlist\">\n                  {musicList.map(({ previewUrl, trackId, trackName }) => (\n                    <MusicCard\n                      key={ trackId }\n                      musicTrack={ previewUrl }\n                      trackName={ trackName }\n                      trackId={ trackId }\n                      favoriteSong={ this.favoriteSong }\n                    />))}\n                </ul>\n              </>)}\n        </section>\n      </section>\n    </section>\n  );\n}\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n","export default __webpack_public_path__ + \"static/media/default_avatar.9ea5d993.svg\";","// Biblioteca\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Componentes\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\n\n// Serviços\nimport { getUser, updateUser } from '../services/userAPI';\n\nimport defaultAvatar from '../imgs/default_avatar.svg';\n\nclass ProfileEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profileEditLoading: true,\n      userData: {},\n      buttonDisable: true,\n      pageRedirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  getUserData = async () => {\n    const userData = await getUser();\n    this.setState({\n      userData,\n      profileEditLoading: false,\n    });\n    this.validInput();\n  }\n\n  emailValidation = (email) => {\n    const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g; // Fonte https://regexr.com/3e48o\n    return emailRegex.test(email);\n  }\n\n  validInput = () => {\n    const { userData: { name, email, image, description } } = this.state;\n    const minLength = 1;\n    const inputList = [name, email, image, description];\n    const lengthValidation = inputList.every((input) => input.length >= minLength);\n    const emailTest = this.emailValidation(email);\n    const finalTest = lengthValidation && emailTest;\n    this.setState({ buttonDisable: !finalTest });\n  }\n\n  formsStateUpdate = ({ target }) => {\n    const { name, value } = target;\n    this.setState((prevState) => ({\n      userData: { ...prevState.userData, [name]: value },\n    }), () => this.validInput());\n  }\n\n  saveProfile = async () => {\n    const { userData } = this.state;\n    this.setState({ profileEditLoading: true });\n    await updateUser(userData);\n    this.setState({ pageRedirect: true });\n  }\n\n  profileForms = () => {\n    const { userData, buttonDisable } = this.state;\n    return (\n      <>\n        <div className=\"profile-top-container\">\n          <div className=\"profile-img-container\">\n            <img\n              data-testid=\"profile-image\"\n              src={ userData.image || defaultAvatar }\n              alt={ `avatar-${userData.name}` }\n            />\n          </div>\n          <div className=\"profile-button-container\">\n            <input\n              className=\"input-edit-link\"\n              placeholder=\"Insira um link\"\n              data-testid=\"edit-input-image\"\n              type=\"text\"\n              name=\"image\"\n              value={ userData.image }\n              onChange={ this.formsStateUpdate }\n            />\n\n          </div>\n        </div>\n        <div className=\"profile-edit-info-container\">\n          <strong>Nome:</strong>\n          <em>Fique à vontade para usar seu nome social</em>\n          <input\n            className=\"profile-info-input\"\n            data-testid=\"edit-input-name\"\n            type=\"text\"\n            name=\"name\"\n            value={ userData.name }\n            onChange={ this.formsStateUpdate }\n          />\n\n          <strong>E-mail:</strong>\n          <em>Escolha um e-mail que consulte diariamente</em>\n          <input\n            className=\"profile-info-input\"\n            data-testid=\"edit-input-email\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"usuario@usuario.com.br\"\n            value={ userData.email }\n            onChange={ this.formsStateUpdate }\n          />\n\n          <strong>Descrição:</strong>\n          <textarea\n            className=\"profile-info-input\"\n            placeholder=\"Sobre mim\"\n            data-testid=\"edit-input-description\"\n            name=\"description\"\n            value={ userData.description }\n            onChange={ this.formsStateUpdate }\n          />\n          <button\n            className=\"blue-button\"\n            data-testid=\"edit-button-save\"\n            type=\"button\"\n            disabled={ buttonDisable }\n            onClick={ this.saveProfile }\n          >\n            Salvar\n\n          </button>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const { profileEditLoading, pageRedirect } = this.state;\n    return (\n      <section data-testid=\"page-profile-edit\" className=\"top-container\">\n        <Header />\n\n        <section className=\"profile-edit-container\">\n          {profileEditLoading\n            ? <Loading />\n            : this.profileForms()}\n\n          { pageRedirect && <Redirect to=\"/profile\" /> }\n\n        </section>\n\n      </section>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Componentes\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\n\n// Serviços\nimport { getUser } from '../services/userAPI';\n\nimport defaultAvatar from '../imgs/default_avatar.svg';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profileLoading: true,\n      userData: '',\n    };\n  }\n\n  componentDidMount() {\n    this.userLogged();\n  }\n\nuserLogged = async () => {\n  const userData = await getUser();\n  this.setState({\n    userData,\n    profileLoading: false,\n  });\n}\n\nprofileDisplay = () => {\n  const { userData } = this.state;\n\n  return (\n    <>\n      <div className=\"profile-top-container\">\n        <div className=\"profile-img-container\">\n          <img\n            data-testid=\"profile-image\"\n            src={ userData.image || defaultAvatar }\n            alt={ `avatar-${userData.name}` }\n          />\n        </div>\n        <div className=\"profile-button-container\">\n          <Link to=\"/profile/edit\">\n            <button type=\"button\">Editar perfil</button>\n          </Link>\n        </div>\n      </div>\n      <div className=\"profile-info-container\">\n        <div>\n          <strong>Nome:</strong>\n          <p>{ userData.name }</p>\n        </div>\n        <div>\n          <strong>E-mail:</strong>\n          <p>{ userData.email }</p>\n        </div>\n        <div>\n          <strong>Descrição:</strong>\n          <p>{ userData.description }</p>\n        </div>\n\n      </div>\n    </>\n  );\n}\n\nrender() {\n  const { profileLoading } = this.state;\n  return (\n    <section data-testid=\"page-profile\" className=\"top-container\">\n      <Header />\n      <section className=\"profile-container\">\n        {profileLoading\n          ? <Loading />\n          : this.profileDisplay()}\n      </section>\n    </section>\n  );\n}\n}\n\nexport default Profile;\n","// Biblioteca\nimport React, { Component } from 'react';\n\n// Componentes\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport Loading from '../components/Loading';\n\n// Serviços\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Favorites extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      favoriteLoading: true,\n      favoriteList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.favoriteRecovery();\n  }\n\n  favoriteRecovery = async () => {\n    const favoriteList = await getFavoriteSongs();\n    this.setState({\n      favoriteList,\n      favoriteLoading: false,\n    });\n  }\n\n  favoriteSong = async (id) => {\n    const { favoriteList } = this.state;\n    const favorite = favoriteList.find(({ trackId }) => trackId === id);\n    this.setState({ favoriteLoading: true });\n\n    await removeSong(favorite);\n    this.favoriteRecovery();\n  }\n\n  favoriteDisplay = () => {\n    const { favoriteList } = this.state;\n    return (\n      favoriteList.length === 0\n        ? (<h1>Não existem músicas favorista ainda</h1>)\n        : (\n          <>\n            <h2>\n              Músicas favoritas:\n            </h2>\n            <ul>\n              {favoriteList\n                .map((album) => (<MusicCard\n                  key={ album.trackId }\n                  musicTrack={ album.previewUrl }\n                  trackName={ album.trackName }\n                  artworkUrl100={ album.artworkUrl100 }\n                  trackId={ album.trackId }\n                  collectionId={ album.collectionId }\n                  favoriteSong={ this.favoriteSong }\n                  favoritePage\n                />))}\n            </ul>\n          </>\n        )\n    );\n  }\n\n  render() {\n    const { favoriteLoading } = this.state;\n    return (\n      <section data-testid=\"page-favorites\" className=\"top-container\">\n        <Header />\n        <section className=\"favorite-background-container\">\n          {favoriteLoading\n            ? <Loading />\n            : this.favoriteDisplay() }\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Favorites;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass AlbumCard extends Component {\n  render() {\n    const { searchData: { collectionName, artistName, artworkUrl100,\n      collectionId } } = this.props;\n    return (\n      <section className=\"album-card\">\n        <img src={ artworkUrl100 } alt={ collectionName } />\n\n        <section className=\"album-cover\">\n          <Link\n            to={ `/album/${collectionId}` }\n            data-testid={ `link-to-album-${collectionId}` }\n          >\n            <strong>{collectionName}</strong>\n          </Link>\n\n          <p>{artistName}</p>\n\n        </section>\n      </section>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  searchData: PropTypes.shape({\n    collectionName: PropTypes.string,\n    artistName: PropTypes.string,\n    artworkUrl100: PropTypes.string,\n    collectionId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default AlbumCard;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport { MagnifyingGlass } from 'phosphor-react';\n\n// Serviços\nimport searchAlbumAPIs from '../services/searchAlbumsAPI';\n\n// Componentes\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport AlbumCard from '../components/AlbumCard';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchFor: '',\n      buttonDisable: true,\n      searchLoading: false,\n      currentSearch: '',\n      searchList: [],\n    };\n  }\n\nsearchStateUpdate = ({ target }) => {\n  const { value } = target;\n  this.setState({\n    searchFor: value,\n  }, () => this.minSearchLength());\n}\n\n  minSearchLength = () => {\n    const { searchFor } = this.state;\n    const minLength = 2;\n    const lengthValidation = searchFor.length >= minLength;\n    this.setState({\n      buttonDisable: !lengthValidation,\n    });\n  }\n\n  searchAlbuns = () => {\n    const { searchFor } = this.state;\n    this.setState({\n      searchFor: '',\n      buttonDisable: true,\n      searchLoading: true,\n    }, async () => {\n      const searchResponse = await searchAlbumAPIs(searchFor);\n      this.setState({\n        searchLoading: false,\n        searchList: searchResponse,\n        currentSearch: searchFor,\n      });\n    });\n  }\n\n  searchDisplay = (searchList, currentSearch) => {\n    if (searchList.length === 0) {\n      return (\n        <span\n          className=\"album-not-found\"\n        >\n          Nenhum álbum foi encontrado\n        </span>);\n    }\n    return (\n      <section className=\"albums-found-container\">\n        <span\n          className=\"album-result-title\"\n        >\n          {`Resultado de álbuns de: ${currentSearch}`}\n        </span>\n        <section className=\"albuns-found-container\">\n          {searchList.map((album) => (\n            <AlbumCard\n              searchData={ album }\n              key={ `album-key-${album.collectionId}` }\n            />\n          ))}\n        </section>\n\n      </section>);\n  }\n\n  render() {\n    const { searchFor, buttonDisable, searchLoading,\n      currentSearch, searchList } = this.state;\n\n    return (\n      <section data-testid=\"page-search\" className=\"top-container\">\n        <Header />\n\n        <section className=\"search-input-container\">\n          <section\n            className=\"search-input\"\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Nome do Artista ou Banda\"\n              data-testid=\"search-artist-input\"\n              value={ searchFor }\n              onChange={ this.searchStateUpdate }\n            />\n            <MagnifyingGlass\n              className=\"search-ico\"\n              size={ 20 }\n            />\n          </section>\n\n          <button\n            type=\"button\"\n            className=\"blue-button\"\n            data-testid=\"search-artist-button\"\n            onClick={ this.searchAlbuns }\n            disabled={ buttonDisable }\n          >\n            Pesquisar\n\n          </button>\n        </section>\n\n        { searchLoading\n          ? <Loading />\n          : currentSearch && this.searchDisplay(searchList, currentSearch)}\n      </section>\n\n    );\n  }\n}\n\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/trybetunes_logo.99baff09.svg\";","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Serviços\nimport { createUser } from '../services/userAPI';\n\n// Componentes\nimport Loading from '../components/Loading';\n\nimport tunesLogo from '../imgs/trybetunes_logo.svg';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      buttonDisable: true,\n      loading: false,\n    };\n  }\n\nminNameLength = () => {\n  const { userName } = this.state;\n  const minLength = 3;\n  const lengthValidation = userName.length >= minLength;\n\n  this.setState({\n    buttonDisable: !lengthValidation,\n  });\n}\n\n  loginStateUpdate = ({ target }) => {\n    const { value } = target;\n    this.setState({\n      userName: value,\n    }, () => this.minNameLength());\n  }\n\n  userLogin = async () => {\n    const { userName } = this.state;\n    const { userLogin } = this.props;\n\n    this.setState({\n      loading: true,\n    });\n    await createUser({ name: userName });\n    userLogin();\n  }\n\n  render() {\n    const { userName, buttonDisable, loading } = this.state;\n    return loading ? <Loading /> : (\n      <section data-testid=\"page-login\" className=\"login-container\">\n        <img className=\"login-logo\" src={ tunesLogo } alt=\"trybe tunes logo\" />\n        <section className=\"login-forms\">\n          <input\n            type=\"text\"\n            placeholder=\"Nome\"\n            data-testid=\"login-name-input\"\n            onChange={ this.loginStateUpdate }\n            value={ userName }\n          />\n\n          <button\n            type=\"button\"\n            className=\"blue-button\"\n            data-testid=\"login-submit-button\"\n            disabled={ buttonDisable }\n            onClick={ this.userLogin }\n          >\n            Entrar\n          </button>\n        </section>\n      </section>\n    );\n  }\n}\n\nLogin.propTypes = {\n  userLogin: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport logo from '../imgs/trybetunes_logo.svg';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section\n        className=\"notfound-container\"\n        data-testid=\"page-not-found\"\n      >\n        <img src={ logo } alt=\"trybetunes logo\" />\n        <section className=\"notfound-msg-container\">\n          <span className=\"notfound-title\">\n            Ops!\n          </span>\n          <span className=\"notfound-msg \">\n            A página que você está procurando não foi encontrada\n          </span>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\n// Componentes\nimport Album from './pages/Album';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Profile from './pages/Profile';\nimport Favorites from './pages/Favorites';\nimport Search from './pages/Search';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\n\n// Estilos\nimport './styles/login.css';\nimport './styles/header.css';\nimport './styles/general.css';\nimport './styles/search.css';\nimport './styles/album.css';\nimport './styles/loading.css';\nimport './styles/profile.css';\nimport './styles/notfound.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logIn: false,\n    };\n  }\n\n  userLogin = () => {\n    this.setState({\n      logIn: true,\n    });\n  }\n\n  render() {\n    const { logIn } = this.state;\n    return (\n      <main className=\"main-container\">\n        <Router basename=\"trybe-project-trybetunes\">\n          <Switch>\n            <Route exact path=\"/album/:id\" component={ Album } />\n            <Route exact path=\"/profile/edit\" component={ ProfileEdit } />\n            <Route exact path=\"/profile/\" component={ Profile } />\n            <Route exact path=\"/favorites\" component={ Favorites } />\n            <Route exact path=\"/search\" component={ Search } />\n\n            <Route exact path=\"/\">\n              { logIn\n                ? <Redirect to=\"/search\" />\n                : <Login userLogin={ this.userLogin } />}\n            </Route>\n\n            <Route path=\"*\" component={ NotFound } />\n          </Switch>\n        </Router>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}